<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tasly.deepureflow.client.IAgentFlowStockItemMapper" >
  <resultMap id="BaseResultMap" type="com.tasly.deepureflow.domain.deepureflow.AgentFlowStockItem" >
    <id column="AGENT_FLOW_SHIPMENT_ITEM_ID" property="agentFlowShipmentItemId" jdbcType="VARCHAR" />
    <result column="AGENT_FLOW_ID" property="agentFlowId" jdbcType="VARCHAR" />
    <result column="SKU_ID" property="skuId" jdbcType="VARCHAR" />
    <result column="SKU_NAME" property="skuName" jdbcType="VARCHAR" />
    <result column="STOCK_QUANTITY" property="stockQuantity" jdbcType="INTEGER" />
    <result column="STOCK_MIN_QUANTITY" property="stockMinQuantity" jdbcType="INTEGER" />
    <result column="BASE_UNIT_CODE" property="baseUnitCode" jdbcType="VARCHAR" />
    <result column="BASE_UNIT" property="baseUnit" jdbcType="VARCHAR" />
    <result column="MIN_UNIT_CODE" property="minUnitCode" jdbcType="VARCHAR" />
    <result column="MIN_UNIT" property="minUnit" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    AGENT_FLOW_SHIPMENT_ITEM_ID, AGENT_FLOW_ID, SKU_ID, SKU_NAME, STOCK_QUANTITY, STOCK_MIN_QUANTITY, 
    BASE_UNIT_CODE, BASE_UNIT, MIN_UNIT_CODE, MIN_UNIT
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tasly.deepureflow.domain.deepureflow.AgentFlowStockItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from deepureflow_agent_flow_stock_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from deepureflow_agent_flow_stock_item
    where AGENT_FLOW_SHIPMENT_ITEM_ID = #{agentFlowShipmentItemId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from deepureflow_agent_flow_stock_item
    where AGENT_FLOW_SHIPMENT_ITEM_ID = #{agentFlowShipmentItemId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.tasly.deepureflow.domain.deepureflow.AgentFlowStockItemExample" >
    delete from deepureflow_agent_flow_stock_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tasly.deepureflow.domain.deepureflow.AgentFlowStockItem" >
    insert into deepureflow_agent_flow_stock_item (AGENT_FLOW_SHIPMENT_ITEM_ID, AGENT_FLOW_ID, 
      SKU_ID, SKU_NAME, STOCK_QUANTITY, 
      STOCK_MIN_QUANTITY, BASE_UNIT_CODE, BASE_UNIT, 
      MIN_UNIT_CODE, MIN_UNIT)
    values (#{agentFlowShipmentItemId,jdbcType=VARCHAR}, #{agentFlowId,jdbcType=VARCHAR}, 
      #{skuId,jdbcType=VARCHAR}, #{skuName,jdbcType=VARCHAR}, #{stockQuantity,jdbcType=INTEGER}, 
      #{stockMinQuantity,jdbcType=INTEGER}, #{baseUnitCode,jdbcType=VARCHAR}, #{baseUnit,jdbcType=VARCHAR}, 
      #{minUnitCode,jdbcType=VARCHAR}, #{minUnit,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tasly.deepureflow.domain.deepureflow.AgentFlowStockItem" >
    insert into deepureflow_agent_flow_stock_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="agentFlowShipmentItemId != null" >
        AGENT_FLOW_SHIPMENT_ITEM_ID,
      </if>
      <if test="agentFlowId != null" >
        AGENT_FLOW_ID,
      </if>
      <if test="skuId != null" >
        SKU_ID,
      </if>
      <if test="skuName != null" >
        SKU_NAME,
      </if>
      <if test="stockQuantity != null" >
        STOCK_QUANTITY,
      </if>
      <if test="stockMinQuantity != null" >
        STOCK_MIN_QUANTITY,
      </if>
      <if test="baseUnitCode != null" >
        BASE_UNIT_CODE,
      </if>
      <if test="baseUnit != null" >
        BASE_UNIT,
      </if>
      <if test="minUnitCode != null" >
        MIN_UNIT_CODE,
      </if>
      <if test="minUnit != null" >
        MIN_UNIT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="agentFlowShipmentItemId != null" >
        #{agentFlowShipmentItemId,jdbcType=VARCHAR},
      </if>
      <if test="agentFlowId != null" >
        #{agentFlowId,jdbcType=VARCHAR},
      </if>
      <if test="skuId != null" >
        #{skuId,jdbcType=VARCHAR},
      </if>
      <if test="skuName != null" >
        #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="stockQuantity != null" >
        #{stockQuantity,jdbcType=INTEGER},
      </if>
      <if test="stockMinQuantity != null" >
        #{stockMinQuantity,jdbcType=INTEGER},
      </if>
      <if test="baseUnitCode != null" >
        #{baseUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="baseUnit != null" >
        #{baseUnit,jdbcType=VARCHAR},
      </if>
      <if test="minUnitCode != null" >
        #{minUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="minUnit != null" >
        #{minUnit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tasly.deepureflow.domain.deepureflow.AgentFlowStockItemExample" resultType="java.lang.Integer" >
    select count(*) from deepureflow_agent_flow_stock_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update deepureflow_agent_flow_stock_item
    <set >
      <if test="record.agentFlowShipmentItemId != null" >
        AGENT_FLOW_SHIPMENT_ITEM_ID = #{record.agentFlowShipmentItemId,jdbcType=VARCHAR},
      </if>
      <if test="record.agentFlowId != null" >
        AGENT_FLOW_ID = #{record.agentFlowId,jdbcType=VARCHAR},
      </if>
      <if test="record.skuId != null" >
        SKU_ID = #{record.skuId,jdbcType=VARCHAR},
      </if>
      <if test="record.skuName != null" >
        SKU_NAME = #{record.skuName,jdbcType=VARCHAR},
      </if>
      <if test="record.stockQuantity != null" >
        STOCK_QUANTITY = #{record.stockQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.stockMinQuantity != null" >
        STOCK_MIN_QUANTITY = #{record.stockMinQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.baseUnitCode != null" >
        BASE_UNIT_CODE = #{record.baseUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="record.baseUnit != null" >
        BASE_UNIT = #{record.baseUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.minUnitCode != null" >
        MIN_UNIT_CODE = #{record.minUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="record.minUnit != null" >
        MIN_UNIT = #{record.minUnit,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update deepureflow_agent_flow_stock_item
    set AGENT_FLOW_SHIPMENT_ITEM_ID = #{record.agentFlowShipmentItemId,jdbcType=VARCHAR},
      AGENT_FLOW_ID = #{record.agentFlowId,jdbcType=VARCHAR},
      SKU_ID = #{record.skuId,jdbcType=VARCHAR},
      SKU_NAME = #{record.skuName,jdbcType=VARCHAR},
      STOCK_QUANTITY = #{record.stockQuantity,jdbcType=INTEGER},
      STOCK_MIN_QUANTITY = #{record.stockMinQuantity,jdbcType=INTEGER},
      BASE_UNIT_CODE = #{record.baseUnitCode,jdbcType=VARCHAR},
      BASE_UNIT = #{record.baseUnit,jdbcType=VARCHAR},
      MIN_UNIT_CODE = #{record.minUnitCode,jdbcType=VARCHAR},
      MIN_UNIT = #{record.minUnit,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tasly.deepureflow.domain.deepureflow.AgentFlowStockItem" >
    update deepureflow_agent_flow_stock_item
    <set >
      <if test="agentFlowId != null" >
        AGENT_FLOW_ID = #{agentFlowId,jdbcType=VARCHAR},
      </if>
      <if test="skuId != null" >
        SKU_ID = #{skuId,jdbcType=VARCHAR},
      </if>
      <if test="skuName != null" >
        SKU_NAME = #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="stockQuantity != null" >
        STOCK_QUANTITY = #{stockQuantity,jdbcType=INTEGER},
      </if>
      <if test="stockMinQuantity != null" >
        STOCK_MIN_QUANTITY = #{stockMinQuantity,jdbcType=INTEGER},
      </if>
      <if test="baseUnitCode != null" >
        BASE_UNIT_CODE = #{baseUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="baseUnit != null" >
        BASE_UNIT = #{baseUnit,jdbcType=VARCHAR},
      </if>
      <if test="minUnitCode != null" >
        MIN_UNIT_CODE = #{minUnitCode,jdbcType=VARCHAR},
      </if>
      <if test="minUnit != null" >
        MIN_UNIT = #{minUnit,jdbcType=VARCHAR},
      </if>
    </set>
    where AGENT_FLOW_SHIPMENT_ITEM_ID = #{agentFlowShipmentItemId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tasly.deepureflow.domain.deepureflow.AgentFlowStockItem" >
    update deepureflow_agent_flow_stock_item
    set AGENT_FLOW_ID = #{agentFlowId,jdbcType=VARCHAR},
      SKU_ID = #{skuId,jdbcType=VARCHAR},
      SKU_NAME = #{skuName,jdbcType=VARCHAR},
      STOCK_QUANTITY = #{stockQuantity,jdbcType=INTEGER},
      STOCK_MIN_QUANTITY = #{stockMinQuantity,jdbcType=INTEGER},
      BASE_UNIT_CODE = #{baseUnitCode,jdbcType=VARCHAR},
      BASE_UNIT = #{baseUnit,jdbcType=VARCHAR},
      MIN_UNIT_CODE = #{minUnitCode,jdbcType=VARCHAR},
      MIN_UNIT = #{minUnit,jdbcType=VARCHAR}
    where AGENT_FLOW_SHIPMENT_ITEM_ID = #{agentFlowShipmentItemId,jdbcType=VARCHAR}
  </update>
</mapper>